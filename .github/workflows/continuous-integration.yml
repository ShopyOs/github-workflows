name: "Continuous Integration"

on:
  workflow_call:
    inputs:
      node_versions:
        description: 'Node versions to be used for the build'
        type: string
        required: true
        default: "['18.x', '20.x']"
      os:
        description: 'Operating system to be used for the build'
        type: string
        required: true
        default: "['ubuntu-latest', 'windows-latest', 'macOS-latest']"
      fail-fast:
        default: false
        description: 'Whether to fail fast or not'
        required: false
        type: boolean
      timeout:
        default: 10
        description: 'The number of minutes to wait for the operation to complete.'
        required: false
        type: number

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  show_vars:
    name: Show variables
    runs-on: ubuntu-latest
    steps:
      - name: Show variables
        run: |
          echo "Node versions: ${{ inputs.node_versions }}"
          echo "Operating system: ${{ inputs.os }}"
          echo "Fail fast: ${{ fail-fast }}"
          echo "Timeout: ${{ inputs.timeout }}"

  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}
    timeout-minutes: ${{ inputs.timeout }}

    strategy:
      matrix:
        node: ${{ fromJson(inputs.node_versions) }}
        os: ${{ fromJson(inputs.os) }}
      fail-fast: ${{ inputs.inputs.fail-fast }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: '📚 checkout repository'
        uses: actions/checkout@v4

      - name: '🟢 setup node ${{ matrix.node }}'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: '🗄️ Get cache'
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: '⚙️ installing dependencies'
        id: install-deps
        run: npm install

      - name: '🔨 Build'
        id: build
        run: npm run build